
import javax.swing.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author viren
 */
public class manage_book_home extends javax.swing.JFrame {

    /**
     * Creates new form manage_book_home
     */
     private Connection conn;
    private PreparedStatement preparedStatement;
    private String sql;
    private ResultSet rs;
    private JLabel student_photo;
    private JLabel student_name;
    public manage_book_home() {
        initComponents();
        conn=DBConnect.connectDB();
        sql="SELECT * FROM books";
        updateTable(sql);
       
        
       
    }
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_book_image = new javax.swing.JLabel();
        btn_select_image = new javax.swing.JButton();
        txt_book_name = new javax.swing.JTextField();
        txt_book_author = new javax.swing.JTextField();
        txt_book_isbn_no = new javax.swing.JTextField();
        txt_book_edition = new javax.swing.JTextField();
        txt_book_quantity = new javax.swing.JTextField();
        txt_image_path = new javax.swing.JTextField();
        btn_home = new javax.swing.JButton();
        btn_save_new = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_add_new = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt_search_book = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbData = new javax.swing.JTable();
        delete_one_unit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Book Title");

        jLabel2.setText("Book Author");

        jLabel3.setText("Book ISBN No");

        jLabel4.setText("Book Edition");

        jLabel5.setText("Book Quantity");

        btn_select_image.setText("Select Image");
        btn_select_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_select_imageActionPerformed(evt);
            }
        });

        btn_home.setText("Home");
        btn_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_book_quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(txt_book_name)
                            .addComponent(txt_book_author)
                            .addComponent(txt_book_isbn_no)
                            .addComponent(txt_book_edition)))
                    .addComponent(btn_home, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_select_image)
                        .addGap(18, 18, 18)
                        .addComponent(txt_image_path, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_book_image, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_book_image, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_image_path, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_select_image))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btn_home)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_book_name, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_book_author, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txt_book_isbn_no)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_book_edition, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_book_quantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        btn_save_new.setText("Save New");
        btn_save_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save_newActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_add_new.setText("New");
        btn_add_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_newActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Search");

        txt_search_book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_search_bookActionPerformed(evt);
            }
        });

        jtbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbData);

        delete_one_unit.setText("Delete 1 unit");
        delete_one_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_one_unitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_search_book, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btn_add_new, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btn_save_new, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(delete_one_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save_new)
                    .addComponent(btn_delete)
                    .addComponent(btn_add_new)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_search_book, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update)
                    .addComponent(delete_one_unit))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateTable(String sql){
    try{
       //sql="SELECT * FROM books";
        preparedStatement=conn.prepareStatement(sql);
        rs=preparedStatement.executeQuery();
        jtbData.setModel(DbUtils.resultSetToTableModel(rs));
       
    }catch(Exception e){
    JOptionPane.showMessageDialog(null, "Invalid"+e.getMessage());
    }finally{
            try {
                rs.close();
                preparedStatement.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problem in closing rs or preparedstatement "+e.getMessage());
            }
        }
    
    }
    
    private void updateBook(){
        try {
            sql="UPDATE books SET book_name = ?,book_author = ?,book_edition = ?,book_isbn_no = ?,book_quantity = ?,book_image = ? WHERE book_id = "+selectedID;
            preparedStatement=conn.prepareStatement(sql);
            preparedStatement.setString(1,txt_book_name.getText());
            preparedStatement.setString(2,txt_book_author.getText());
            preparedStatement.setString(3,txt_book_edition.getText());
            preparedStatement.setInt(4,Integer.parseInt(txt_book_isbn_no.getText()));
            preparedStatement.setInt(5,Integer.parseInt(txt_book_quantity.getText()));
            preparedStatement.setBytes(6, byteImage);
            preparedStatement.execute();
            sql="SELECT * FROM books";
            updateTable(sql);
            
            clearFields();
            
        } catch (Exception e) {
              JOptionPane.showMessageDialog(null, "Problem in updateBook "+e.getMessage());
        }
    }
    
    private void addNewBook(){
    
        try {
            
            sql="INSERT INTO books(book_name,book_author,book_edition,book_isbn_no,book_image,book_quantity) VALUES (?,?,?,?,?,?)";
            preparedStatement=conn.prepareStatement(sql);
            preparedStatement.setString(1, txt_book_name.getText());
            preparedStatement.setString(2, txt_book_author.getText());
            preparedStatement.setString(3, txt_book_edition.getText());
            preparedStatement.setInt(4, Integer.parseInt(txt_book_isbn_no.getText()));
            if(byteImage != null){
            preparedStatement.setBytes(5, byteImage);
            }
            else{
            preparedStatement.setBytes(5, null);   
            }
            
            preparedStatement.setInt(6, Integer.parseInt(txt_book_quantity.getText()));
            preparedStatement.execute();
            JOptionPane.showMessageDialog(null, "Book Successfully Added");
            sql="SELECT * FROM books";
            updateTable(sql);
            clearFields();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception Occured while adding a book:- "+e.getMessage());
        }
    
        
    }
    private void selectedRowHandler(){
       
        int row=jtbData.getSelectedRow();
       selectedID= jtbData.getModel().getValueAt(row, 0).toString();
       
        try {
            // JOptionPane.showMessageDialog(null, "Hiii"+selectedID);
            sql="SELECT * FROM books WHERE book_id = "+selectedID;
            preparedStatement=conn.prepareStatement(sql);
            rs=preparedStatement.executeQuery();
            if(rs.next()){
            txt_book_name.setText(rs.getString("book_name"));
            txt_book_author.setText(rs.getString("book_author"));
            txt_book_edition.setText(rs.getString("book_edition"));
            Integer isbn=rs.getInt("book_isbn_no");
            txt_book_isbn_no.setText(isbn.toString());
            Integer quantity=rs.getInt("book_quantity");
            txt_book_quantity.setText(quantity.toString());
            
            byteImage = rs.getBytes("book_image");
            
            BufferedImage img =Thumbnails.of(ImageIO.read(new ByteArrayInputStream(byteImage))).size(180, 220).asBufferedImage();
                ImageIcon i = new ImageIcon(img);
            lbl_book_image.setIcon(i);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "SelectedRowHandler Exception "+e.getMessage());
        }
       
    }
    private void deleteSelectedBook(){
    
        try{
        sql="DELETE FROM books WHERE book_id = "+selectedID;
        preparedStatement=conn.prepareStatement(sql);
        preparedStatement.execute();
        sql="SELECT * FROM books";
        updateTable(sql);
        clearFields();
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Exception in "+e.getMessage());
        }
        
    }
    private void clearFields(){
     txt_book_name.setText("");
        txt_book_author.setText("");
        txt_book_edition.setText("");
        txt_book_isbn_no.setText("");
        txt_book_quantity.setText("");
        txt_image_path.setText("");
        lbl_book_image.setIcon(null);
        
        
        
    }
    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        updateBook();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_save_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save_newActionPerformed
        // TODO add your handling code here:
        addNewBook();
    }//GEN-LAST:event_btn_save_newActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        deleteSelectedBook();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_add_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_newActionPerformed
        // TODO add your handling code here:
       clearFields();
    }//GEN-LAST:event_btn_add_newActionPerformed

    private void txt_search_bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_search_bookActionPerformed
        // TODO add your handling code here:
        searchBook();
    }//GEN-LAST:event_txt_search_bookActionPerformed

    private void jtbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDataMouseClicked
        // TODO add your handling code here:
        selectedRowHandler();
    }//GEN-LAST:event_jtbDataMouseClicked

    private void btn_select_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_select_imageActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        fc.showOpenDialog(null);
        File selectedFile = fc.getSelectedFile();
        String filePath=selectedFile.getAbsolutePath();
        
        if(filePath != null){
            try {
                txt_image_path.setText(filePath);
                BufferedImage thumbnail=Thumbnails.of(selectedFile).size(180, 200).asBufferedImage();
                
                ByteArrayOutputStream os = new ByteArrayOutputStream();
                ImageIO.write(thumbnail, "jpg", os);
                
                byteImage=os.toByteArray();
                ImageIcon icon=new ImageIcon(byteImage);
                
                lbl_book_image.setIcon(icon);
                        
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Some exception in select_image "+e.getMessage());
            }
        }
        
    }//GEN-LAST:event_btn_select_imageActionPerformed

    private void delete_one_unit(){
        try{
        
            sql="SELECT book_quantity FROM books WHERE book_id = "+selectedID;
            preparedStatement=conn.prepareStatement(sql);
            rs=preparedStatement.executeQuery();
            if(rs.next()){
            int quantity=rs.getInt("book_quantity");
            int new_quantity=quantity-1;
            
            sql="UPDATE books SET book_quantity = ? WHERE book_id = "+selectedID;
            preparedStatement=conn.prepareStatement(sql);
            preparedStatement.setInt(1, new_quantity);
            preparedStatement.execute();
            sql="SELECT * FROM books";
            updateTable(sql);
            clearFields();
            }
           
           }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Exception in delete_one_unit "+e.getMessage());
           }
    }
    private void searchBook(){
     String key = txt_search_book.getText();
        String updateTableQuery;
        if(!key.equals(""))
            updateTableQuery = "SELECT * FROM books WHERE book_name like '%" + key + "%'";
        else
            updateTableQuery = "SELECT * FROM books";
        updateTable(updateTableQuery);
    }
    private void delete_one_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_one_unitActionPerformed
        // TODO add your handling code here:
        delete_one_unit();
    }//GEN-LAST:event_delete_one_unitActionPerformed

    private void btn_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeActionPerformed
        // TODO add your handling code here:
        new librarian_home_page().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_homeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manage_book_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manage_book_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manage_book_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manage_book_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manage_book_home().setVisible(true);
            }
            
   
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_new;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_home;
    private javax.swing.JButton btn_save_new;
    private javax.swing.JButton btn_select_image;
    private javax.swing.JButton btn_update;
    private javax.swing.JButton delete_one_unit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbData;
    private javax.swing.JLabel lbl_book_image;
    private javax.swing.JTextField txt_book_author;
    private javax.swing.JTextField txt_book_edition;
    private javax.swing.JTextField txt_book_isbn_no;
    private javax.swing.JTextField txt_book_name;
    private javax.swing.JTextField txt_book_quantity;
    private javax.swing.JTextField txt_image_path;
    private javax.swing.JTextField txt_search_book;
    // End of variables declaration//GEN-END:variables
    private byte[] byteImage=null;
    private String selectedID="";
}
